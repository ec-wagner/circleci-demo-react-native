workflows:
    version: 2
    build-test-deploy:
        jobs:
            # ALLGEMEINER BUILD JOB
            - build:
                filters:
                    branches:
                        only: dev

            # UNIT TESTS ANDROID
            - test_dev_android:
                filters:
                    branches:
                        only: dev
                requires:
                    - build

            # UNIT TESTS iOS
            - test_dev_ios:
                filters:
                    branches:
                        only: dev
                requires:
                    - build

            # UNIT TESTS WEB
            - test_dev_web:
                filters:
                    branches:
                        only: dev
                requires:
                    - build

            # PUSH TO STAGE
            - push_to_stage:
                filters:
                    branches:
                        only: dev
                requires:
                    - test_dev_android
                    - test_dev_ios
                    - test_dev_web

            # INTEGRATION TESTS ANDROID / iOS / WEB
            - test_stage_android:
                filters:
                    branches:
                        only: stage

            - test_stage_ios:
                filters:
                    branches:
                        only: stage

            - test_stage_web:
                filters:
                    branches:
                        only: stage

            # - merge_into_master

            # DEPLOY TO PRE-PRODUCTION
            - deploy_pre_prod:
                requires:
                    - test_stage_android
                    - test_stage_ios
                    - test_stage_web



version: 2
jobs:
    # ALLGEMEINER BUILD JOB
    build:
        working_directory: ~/demo-react-native
        docker:
            - image: circleci/node:8
        steps:
            - checkout

            #- restore_cache:
            #    key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

            #- restore_cache:
            #    key: node-v1-{{ checksum "package.json" }}-{{ arch }}

            # - run: yarn install

            #- save_cache:
            #    key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
            #    paths:
            #      - ~/.cache/yarn

            #- save_cache:
            #    key: node-v1-{{ checksum "package.json" }}-{{ arch }}
            #    paths:
            #      - node_modules

            # - run:
            #     name: jest tests
            #     command: |
            #         mkdir -p test-results/jest
            #         yarn run test
            #     environment:
            #         JEST_JUNIT_OUTPUT: test-results/jest/junit.xml
            #
            # - persist_to_workspace:
            #     root: ~/demo-react-native
            #     paths:
            #         - node_modules
            #
            # - store_test_results:
            #     path: test-results
            #
            # - store_artifacts:
            #     path: test-results

            - run: echo "BUILD SUCCEEDED!"


    # UNIT TESTS ANDROID
    test_dev_android:
        working_directory: ~/demo-react-native/android
        docker:
            - image: circleci/node:8
        steps:
            - checkout:
                path: ~/demo-react-native

            # - attach_workspace:
            #     at: ~/demo-react-native
            #
            # #- restore_cache:
            # #    key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
            #
            # - run: bundle install
            # - run: bundle update fastlane
            #
            # #- save_cache:
            # #    key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
            # #    paths:
            # #      - vendor/bundle
            #
            # - run:
            #     name: fastlane tests
            #     command: |
            #         mkdir -p test-results/fastlane
            #         bundle exec fastlane test
            #         mv fastlane/report.xml test-results/fastlane
            #
            # - store_test_results:
            #     path: test-results
            #
            # - store_artifacts:
            #     path: test-results

            - run:
                name: run unit tests
                command: echo "UNIT TESTS PASS"


    # PUSH TO STAGE
    push_to_stage:
        working_directory: ~/demo-react-native
        docker:
            - image: circleci/node:8
        steps:
            - run:
                name: configure git
                command: |
                    git config user.name "CircleCI"
                    git config user.email "CI@users.noreply.github.com"
                    git config --global push.default simple

            - run: git checkout stage
            - run: git push

            - run: git merge --no-commit dev
            - run: git push
            # - run: git commit -m "merge dev into stage"
            #
            # - run: git push

    # UNIT TESTS iOS
    test_dev_ios:
        working_directory: ~/demo-react-native/ios
        docker:
            - image: circleci/node:8
        steps:
            - run:
                name: run unit tests
                command: echo "UNIT TESTS PASS"


    # UNIT TESTS WEB
    test_dev_web:
        working_directory: ~/demo-react-native/web
        docker:
            - image: circleci/node:8
        steps:
            - run:
                name: run unit tests
                command: echo "UNIT TESTS PASS"

    # INTEGRATION TESTS
    test_stage_android:
        working_directory: ~/demo-react-native/android
        docker:
            - image: circleci/node:8
        steps:
            - run:
                name: run integration tests
                command: echo "INTEGRATION TESTS PASS"

    test_stage_ios:
        working_directory: ~/demo-react-native/ios
        docker:
            - image: circleci/node:8
        steps:
            - run:
                name: run integration tests
                command: echo "INTEGRATION TESTS PASS"

    test_stage_web:
        working_directory: ~/demo-react-native/android
        docker:
            - image: circleci/node:8
        steps:
            - run:
                name: run integration tests
                command: echo "INTEGRATION TESTS PASS"

    # DEPLOY TO PRE-PRODUCTION
    deploy_pre_prod:
        working_directory: ~/demo-react-native/android
        docker:
            - image: circleci/node:8
        steps:
            - run:
                name: LET FAIL AS FUCK
                command: exit 1
